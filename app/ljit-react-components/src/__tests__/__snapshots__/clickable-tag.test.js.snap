// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ClickableTag should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ClickableTag
    backgroundColor="blue"
    badgeAlignment="left"
    badgeIcon={0}
    className="mock-class"
    color="black"
    hasBadge={true}
    onClick={[Function]}
    style={
      Object {
        "fontSize": "20px",
      }
    }
    text="mock-text"
    textColor="yellow"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <div
        className="ljit-clickable-tag mock-class"
        onClick={[Function]}
        style={
          Object {
            "fontSize": "20px",
          }
        }
      >
        <Tag
          backgroundColor="blue"
          color="black"
          hasBorder={false}
          isClosable={false}
          onClose={[Function]}
          shape="rectangle"
          text="mock-text"
          textColor="yellow"
        />
      </div>,
      "className": "ljit-clickable-tag--with-badge ljit-clickable-tag--with-left-badge",
      "count": 0,
      "isBordered": true,
      "isZeroVisible": true,
      "overflowCount": 99,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <Tag
          backgroundColor="blue"
          color="black"
          hasBorder={false}
          isClosable={false}
          onClose={[Function]}
          shape="rectangle"
          text="mock-text"
          textColor="yellow"
        />,
        "className": "ljit-clickable-tag mock-class",
        "onClick": [Function],
        "style": Object {
          "fontSize": "20px",
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "backgroundColor": "blue",
          "color": "black",
          "hasBorder": false,
          "isClosable": false,
          "onClose": [Function],
          "shape": "rectangle",
          "text": "mock-text",
          "textColor": "yellow",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <div
          className="ljit-clickable-tag mock-class"
          onClick={[Function]}
          style={
            Object {
              "fontSize": "20px",
            }
          }
        >
          <Tag
            backgroundColor="blue"
            color="black"
            hasBorder={false}
            isClosable={false}
            onClose={[Function]}
            shape="rectangle"
            text="mock-text"
            textColor="yellow"
          />
        </div>,
        "className": "ljit-clickable-tag--with-badge ljit-clickable-tag--with-left-badge",
        "count": 0,
        "isBordered": true,
        "isZeroVisible": true,
        "overflowCount": 99,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Tag
            backgroundColor="blue"
            color="black"
            hasBorder={false}
            isClosable={false}
            onClose={[Function]}
            shape="rectangle"
            text="mock-text"
            textColor="yellow"
          />,
          "className": "ljit-clickable-tag mock-class",
          "onClick": [Function],
          "style": Object {
            "fontSize": "20px",
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "backgroundColor": "blue",
            "color": "black",
            "hasBorder": false,
            "isClosable": false,
            "onClose": [Function],
            "shape": "rectangle",
            "text": "mock-text",
            "textColor": "yellow",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
