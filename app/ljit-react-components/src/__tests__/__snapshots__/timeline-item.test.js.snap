// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`timeline item should renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TimelineItem
    className="mock-timeline-item"
    nodeColor="brightBlue"
    nodeElement="mock-element"
  >
    mock-children
  </TimelineItem>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": "mock-children",
      "className": "ljit-time-line-item mock-timeline-item",
      "color": "#5cb0ff",
      "dot": "mock-element",
      "pending": false,
    },
    "ref": null,
    "rendered": "mock-children",
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": "mock-children",
        "className": "ljit-time-line-item mock-timeline-item",
        "color": "#5cb0ff",
        "dot": "mock-element",
        "pending": false,
      },
      "ref": null,
      "rendered": "mock-children",
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
