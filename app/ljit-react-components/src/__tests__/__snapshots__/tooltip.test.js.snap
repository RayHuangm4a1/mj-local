// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Tooltip should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Tooltip
    className="mock-class"
    isArrowPointAtCenter={false}
    overlayClassName="mock-overlay-class"
    overlayColor="white"
    overlayStyle={
      Object {
        "padding": "10px",
      }
    }
    placement="top"
    title="mock-title"
    trigger="hover"
  >
    Hover me
  </Tooltip>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "arrowPointAtCenter": false,
      "autoAdjustOverflow": true,
      "children": "Hover me",
      "className": "ljit-tooltip mock-class",
      "mouseEnterDelay": 0.1,
      "mouseLeaveDelay": 0.1,
      "overlayClassName": "mock-overlay-class ljit-tooltip-overlay ljit-tooltip-overlay--white",
      "overlayStyle": Object {
        "padding": "10px",
      },
      "placement": "top",
      "title": "mock-title",
      "transitionName": "zoom-big-fast",
      "trigger": "hover",
    },
    "ref": null,
    "rendered": "Hover me",
    "type": [MockFunction],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "arrowPointAtCenter": false,
        "autoAdjustOverflow": true,
        "children": "Hover me",
        "className": "ljit-tooltip mock-class",
        "mouseEnterDelay": 0.1,
        "mouseLeaveDelay": 0.1,
        "overlayClassName": "mock-overlay-class ljit-tooltip-overlay ljit-tooltip-overlay--white",
        "overlayStyle": Object {
          "padding": "10px",
        },
        "placement": "top",
        "title": "mock-title",
        "transitionName": "zoom-big-fast",
        "trigger": "hover",
      },
      "ref": null,
      "rendered": "Hover me",
      "type": [MockFunction],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
