// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Avatar should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Avatar
    icon="close-circle"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "alt": undefined,
      "children": <mockComponent
        type="close-circle"
      />,
      "onError": undefined,
      "shape": "circle",
      "size": "default",
      "src": undefined,
      "style": undefined,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "type": "close-circle",
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": [MockFunction],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "alt": undefined,
        "children": <mockComponent
          type="close-circle"
        />,
        "onError": undefined,
        "shape": "circle",
        "size": "default",
        "src": undefined,
        "style": undefined,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "type": "close-circle",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": [MockFunction],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
