// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DropdownMenuBar should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DowndownMenuBar
    menuItems={
      Array [
        Object {
          "dropdownContent": <div>
            mock-content1
          </div>,
          "id": 1,
          "title": "mock-title1",
        },
        Object {
          "dropdownContent": <div>
            mock-content2
          </div>,
          "id": 2,
          "title": "mock-title2",
        },
      ]
    }
    onClickMask={[Function]}
    onClickMenu={[Function]}
    selectedId={1}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <div
          className="ljit-dropdown-menu-bar__menu"
        >
          <div
            className="ljit-dropdown-menu-bar__menu-item ljit-dropdown-menu-bar__menu-item--active"
            onClick={[Function]}
          >
            <span>
              mock-title1
            </span>
            <Icon
              color="default"
              isTranslucent={false}
              size="x-small"
              spin={false}
              style={Object {}}
              type="caret-down"
            />
          </div>
          <div
            className="ljit-dropdown-menu-bar__menu-item"
            onClick={[Function]}
          >
            <span>
              mock-title2
            </span>
            <Icon
              color="default"
              isTranslucent={false}
              size="x-small"
              spin={false}
              style={Object {}}
              type="caret-down"
            />
          </div>
        </div>,
        <div
          className="ljit-dropdown-menu-bar__dropdown ljit-dropdown-menu-bar__dropdown--visible"
          onClick={[Function]}
        >
          <div
            className="ljit-dropdown-menu-bar__dropdown-content"
            onClick={[Function]}
          >
            <div>
              mock-content1
            </div>
          </div>
        </div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="ljit-dropdown-menu-bar__menu-item ljit-dropdown-menu-bar__menu-item--active"
              onClick={[Function]}
            >
              <span>
                mock-title1
              </span>
              <Icon
                color="default"
                isTranslucent={false}
                size="x-small"
                spin={false}
                style={Object {}}
                type="caret-down"
              />
            </div>,
            <div
              className="ljit-dropdown-menu-bar__menu-item"
              onClick={[Function]}
            >
              <span>
                mock-title2
              </span>
              <Icon
                color="default"
                isTranslucent={false}
                size="x-small"
                spin={false}
                style={Object {}}
                type="caret-down"
              />
            </div>,
          ],
          "className": "ljit-dropdown-menu-bar__menu",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "1",
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <span>
                  mock-title1
                </span>,
                <Icon
                  color="default"
                  isTranslucent={false}
                  size="x-small"
                  spin={false}
                  style={Object {}}
                  type="caret-down"
                />,
              ],
              "className": "ljit-dropdown-menu-bar__menu-item ljit-dropdown-menu-bar__menu-item--active",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "mock-title1",
                },
                "ref": null,
                "rendered": "mock-title1",
                "type": "span",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "color": "default",
                  "isTranslucent": false,
                  "size": "x-small",
                  "spin": false,
                  "style": Object {},
                  "type": "caret-down",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": "2",
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <span>
                  mock-title2
                </span>,
                <Icon
                  color="default"
                  isTranslucent={false}
                  size="x-small"
                  spin={false}
                  style={Object {}}
                  type="caret-down"
                />,
              ],
              "className": "ljit-dropdown-menu-bar__menu-item",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "mock-title2",
                },
                "ref": null,
                "rendered": "mock-title2",
                "type": "span",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "color": "default",
                  "isTranslucent": false,
                  "size": "x-small",
                  "spin": false,
                  "style": Object {},
                  "type": "caret-down",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="ljit-dropdown-menu-bar__dropdown-content"
            onClick={[Function]}
          >
            <div>
              mock-content1
            </div>
          </div>,
          "className": "ljit-dropdown-menu-bar__dropdown ljit-dropdown-menu-bar__dropdown--visible",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div>
              mock-content1
            </div>,
            "className": "ljit-dropdown-menu-bar__dropdown-content",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "mock-content1",
            },
            "ref": null,
            "rendered": "mock-content1",
            "type": "div",
          },
          "type": "div",
        },
        "type": "div",
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <div
            className="ljit-dropdown-menu-bar__menu"
          >
            <div
              className="ljit-dropdown-menu-bar__menu-item ljit-dropdown-menu-bar__menu-item--active"
              onClick={[Function]}
            >
              <span>
                mock-title1
              </span>
              <Icon
                color="default"
                isTranslucent={false}
                size="x-small"
                spin={false}
                style={Object {}}
                type="caret-down"
              />
            </div>
            <div
              className="ljit-dropdown-menu-bar__menu-item"
              onClick={[Function]}
            >
              <span>
                mock-title2
              </span>
              <Icon
                color="default"
                isTranslucent={false}
                size="x-small"
                spin={false}
                style={Object {}}
                type="caret-down"
              />
            </div>
          </div>,
          <div
            className="ljit-dropdown-menu-bar__dropdown ljit-dropdown-menu-bar__dropdown--visible"
            onClick={[Function]}
          >
            <div
              className="ljit-dropdown-menu-bar__dropdown-content"
              onClick={[Function]}
            >
              <div>
                mock-content1
              </div>
            </div>
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="ljit-dropdown-menu-bar__menu-item ljit-dropdown-menu-bar__menu-item--active"
                onClick={[Function]}
              >
                <span>
                  mock-title1
                </span>
                <Icon
                  color="default"
                  isTranslucent={false}
                  size="x-small"
                  spin={false}
                  style={Object {}}
                  type="caret-down"
                />
              </div>,
              <div
                className="ljit-dropdown-menu-bar__menu-item"
                onClick={[Function]}
              >
                <span>
                  mock-title2
                </span>
                <Icon
                  color="default"
                  isTranslucent={false}
                  size="x-small"
                  spin={false}
                  style={Object {}}
                  type="caret-down"
                />
              </div>,
            ],
            "className": "ljit-dropdown-menu-bar__menu",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "1",
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <span>
                    mock-title1
                  </span>,
                  <Icon
                    color="default"
                    isTranslucent={false}
                    size="x-small"
                    spin={false}
                    style={Object {}}
                    type="caret-down"
                  />,
                ],
                "className": "ljit-dropdown-menu-bar__menu-item ljit-dropdown-menu-bar__menu-item--active",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "mock-title1",
                  },
                  "ref": null,
                  "rendered": "mock-title1",
                  "type": "span",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "color": "default",
                    "isTranslucent": false,
                    "size": "x-small",
                    "spin": false,
                    "style": Object {},
                    "type": "caret-down",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": "2",
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <span>
                    mock-title2
                  </span>,
                  <Icon
                    color="default"
                    isTranslucent={false}
                    size="x-small"
                    spin={false}
                    style={Object {}}
                    type="caret-down"
                  />,
                ],
                "className": "ljit-dropdown-menu-bar__menu-item",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "mock-title2",
                  },
                  "ref": null,
                  "rendered": "mock-title2",
                  "type": "span",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "color": "default",
                    "isTranslucent": false,
                    "size": "x-small",
                    "spin": false,
                    "style": Object {},
                    "type": "caret-down",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="ljit-dropdown-menu-bar__dropdown-content"
              onClick={[Function]}
            >
              <div>
                mock-content1
              </div>
            </div>,
            "className": "ljit-dropdown-menu-bar__dropdown ljit-dropdown-menu-bar__dropdown--visible",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div>
                mock-content1
              </div>,
              "className": "ljit-dropdown-menu-bar__dropdown-content",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "mock-content1",
              },
              "ref": null,
              "rendered": "mock-content1",
              "type": "div",
            },
            "type": "div",
          },
          "type": "div",
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
