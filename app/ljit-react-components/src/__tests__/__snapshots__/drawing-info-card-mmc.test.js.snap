// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DrawingInfoCardMMC should renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DrawingInfoCardMMC
    buttonText="投注"
    className=""
    isButtonDisabled={false}
    onClickButton={[Function]}
    opencode="1,3,5,7,9"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div>
          <MockComponent
            className="drawing-info-card-mmc__ball"
            text="1"
          />
          <MockComponent
            className="drawing-info-card-mmc__ball"
            text="3"
          />
          <MockComponent
            className="drawing-info-card-mmc__ball"
            text="5"
          />
          <MockComponent
            className="drawing-info-card-mmc__ball"
            text="7"
          />
          <MockComponent
            className="drawing-info-card-mmc__ball"
            text="9"
          />
        </div>,
        <div
          className="drawing-info-card-mmc__bet-wrapper"
        >
          <button
            className="drawing-info-card-mmc__bet"
            disabled={false}
            onClick={[Function]}
          >
            投注
          </button>
        </div>,
      ],
      "className": "drawing-info-card-mmc",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <MockComponent
              className="drawing-info-card-mmc__ball"
              text="1"
            />,
            <MockComponent
              className="drawing-info-card-mmc__ball"
              text="3"
            />,
            <MockComponent
              className="drawing-info-card-mmc__ball"
              text="5"
            />,
            <MockComponent
              className="drawing-info-card-mmc__ball"
              text="7"
            />,
            <MockComponent
              className="drawing-info-card-mmc__ball"
              text="9"
            />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "1-0",
            "nodeType": "function",
            "props": Object {
              "className": "drawing-info-card-mmc__ball",
              "text": "1",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "3-1",
            "nodeType": "function",
            "props": Object {
              "className": "drawing-info-card-mmc__ball",
              "text": "3",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "5-2",
            "nodeType": "function",
            "props": Object {
              "className": "drawing-info-card-mmc__ball",
              "text": "5",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "7-3",
            "nodeType": "function",
            "props": Object {
              "className": "drawing-info-card-mmc__ball",
              "text": "7",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "9-4",
            "nodeType": "function",
            "props": Object {
              "className": "drawing-info-card-mmc__ball",
              "text": "9",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <button
            className="drawing-info-card-mmc__bet"
            disabled={false}
            onClick={[Function]}
          >
            投注
          </button>,
          "className": "drawing-info-card-mmc__bet-wrapper",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "投注",
            "className": "drawing-info-card-mmc__bet",
            "disabled": false,
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "投注",
          "type": "button",
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div>
            <MockComponent
              className="drawing-info-card-mmc__ball"
              text="1"
            />
            <MockComponent
              className="drawing-info-card-mmc__ball"
              text="3"
            />
            <MockComponent
              className="drawing-info-card-mmc__ball"
              text="5"
            />
            <MockComponent
              className="drawing-info-card-mmc__ball"
              text="7"
            />
            <MockComponent
              className="drawing-info-card-mmc__ball"
              text="9"
            />
          </div>,
          <div
            className="drawing-info-card-mmc__bet-wrapper"
          >
            <button
              className="drawing-info-card-mmc__bet"
              disabled={false}
              onClick={[Function]}
            >
              投注
            </button>
          </div>,
        ],
        "className": "drawing-info-card-mmc",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <MockComponent
                className="drawing-info-card-mmc__ball"
                text="1"
              />,
              <MockComponent
                className="drawing-info-card-mmc__ball"
                text="3"
              />,
              <MockComponent
                className="drawing-info-card-mmc__ball"
                text="5"
              />,
              <MockComponent
                className="drawing-info-card-mmc__ball"
                text="7"
              />,
              <MockComponent
                className="drawing-info-card-mmc__ball"
                text="9"
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "1-0",
              "nodeType": "function",
              "props": Object {
                "className": "drawing-info-card-mmc__ball",
                "text": "1",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "3-1",
              "nodeType": "function",
              "props": Object {
                "className": "drawing-info-card-mmc__ball",
                "text": "3",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "5-2",
              "nodeType": "function",
              "props": Object {
                "className": "drawing-info-card-mmc__ball",
                "text": "5",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "7-3",
              "nodeType": "function",
              "props": Object {
                "className": "drawing-info-card-mmc__ball",
                "text": "7",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "9-4",
              "nodeType": "function",
              "props": Object {
                "className": "drawing-info-card-mmc__ball",
                "text": "9",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <button
              className="drawing-info-card-mmc__bet"
              disabled={false}
              onClick={[Function]}
            >
              投注
            </button>,
            "className": "drawing-info-card-mmc__bet-wrapper",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "投注",
              "className": "drawing-info-card-mmc__bet",
              "disabled": false,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "投注",
            "type": "button",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
