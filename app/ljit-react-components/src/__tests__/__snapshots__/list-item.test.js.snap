// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ListItem should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ListItem
    className="mock-class"
    content="mock-content"
    prefix="mock-prefix"
    right="mock-right"
    title="mock-title"
    titleHint="mock-title-hint"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <div
        className="ljit-list-item__wrapper"
      >
        mock-prefix
        <div>
          <div
            className="ljit-list-item__title"
          >
            mock-title
            <span
              className="ljit-list-item__title-hint"
            >
              mock-title-hint
            </span>
          </div>
          mock-content
        </div>
      </div>,
      "className": "ljit-list-item mock-class",
      "extra": "mock-right",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          "mock-prefix",
          <div>
            <div
              className="ljit-list-item__title"
            >
              mock-title
              <span
                className="ljit-list-item__title-hint"
              >
                mock-title-hint
              </span>
            </div>
            mock-content
          </div>,
        ],
        "className": "ljit-list-item__wrapper",
      },
      "ref": null,
      "rendered": Array [
        "mock-prefix",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="ljit-list-item__title"
              >
                mock-title
                <span
                  className="ljit-list-item__title-hint"
                >
                  mock-title-hint
                </span>
              </div>,
              null,
              "mock-content",
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "mock-title",
                  <span
                    className="ljit-list-item__title-hint"
                  >
                    mock-title-hint
                  </span>,
                ],
                "className": "ljit-list-item__title",
              },
              "ref": null,
              "rendered": Array [
                "mock-title",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "mock-title-hint",
                    "className": "ljit-list-item__title-hint",
                  },
                  "ref": null,
                  "rendered": "mock-title-hint",
                  "type": "span",
                },
              ],
              "type": "div",
            },
            null,
            "mock-content",
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": [MockFunction],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <div
          className="ljit-list-item__wrapper"
        >
          mock-prefix
          <div>
            <div
              className="ljit-list-item__title"
            >
              mock-title
              <span
                className="ljit-list-item__title-hint"
              >
                mock-title-hint
              </span>
            </div>
            mock-content
          </div>
        </div>,
        "className": "ljit-list-item mock-class",
        "extra": "mock-right",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "mock-prefix",
            <div>
              <div
                className="ljit-list-item__title"
              >
                mock-title
                <span
                  className="ljit-list-item__title-hint"
                >
                  mock-title-hint
                </span>
              </div>
              mock-content
            </div>,
          ],
          "className": "ljit-list-item__wrapper",
        },
        "ref": null,
        "rendered": Array [
          "mock-prefix",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="ljit-list-item__title"
                >
                  mock-title
                  <span
                    className="ljit-list-item__title-hint"
                  >
                    mock-title-hint
                  </span>
                </div>,
                null,
                "mock-content",
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "mock-title",
                    <span
                      className="ljit-list-item__title-hint"
                    >
                      mock-title-hint
                    </span>,
                  ],
                  "className": "ljit-list-item__title",
                },
                "ref": null,
                "rendered": Array [
                  "mock-title",
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "mock-title-hint",
                      "className": "ljit-list-item__title-hint",
                    },
                    "ref": null,
                    "rendered": "mock-title-hint",
                    "type": "span",
                  },
                ],
                "type": "div",
              },
              null,
              "mock-content",
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": [MockFunction],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
