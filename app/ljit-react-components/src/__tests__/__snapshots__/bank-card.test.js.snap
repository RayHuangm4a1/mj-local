// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BankCard should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <BankCard
    className="mock-class"
    dataSource={
      Object {
        "activatedAt": "2019-08-13T10:38:43",
        "bankName": "mock-bankName",
        "number": "mock-number",
        "payer": "mock-payer",
        "withdrawableAt": "2019-08-13T16:38:43",
      }
    }
    isUnbindButtonVisible={true}
    onClickUnbind={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "bottom": <div
        className="ljit-bank-card__bottom"
      >
        <Button
          color=""
          disabled={false}
          isFullWidth={true}
          onClick={[Function]}
          outline="solid"
        >
          解除绑定
        </Button>
      </div>,
      "className": "ljit-bank-card mock-class",
      "isShowingCloseButton": false,
      "left": <div
        className="ljit-bank-card__left"
      >
        <div
          className="ljit-bank-card__title"
        >
          mock-bankName
        </div>
        <LabelText
          fontSize="small"
          isFixedWidth={true}
          isSpaceBetween={false}
          label="持卡人："
          labelColType="medium"
          labelColor="grey"
          text="mock-payer"
          textColor="black"
        />
        <LabelText
          fontSize="small"
          isFixedWidth={true}
          isSpaceBetween={false}
          label="尾号："
          labelColType="medium"
          labelColor="grey"
          text="mock-number"
          textColor="black"
        />
      </div>,
      "onClose": [Function],
      "right": <div
        className="ljit-bank-card__right"
      >
        <LabelText
          fontSize="small"
          isFixedWidth={true}
          isSpaceBetween={false}
          label="绑定时间"
          labelColType="medium"
          labelColor="grey"
          text="2019/08/13 10:38:43"
          textColor="black"
        />
        <LabelText
          fontSize="small"
          isFixedWidth={true}
          isSpaceBetween={false}
          label="可提现时间："
          labelColType="medium"
          labelColor="grey"
          text="2019/08/13 16:38:43"
          textColor="black"
        />
      </div>,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "bottom": <div
          className="ljit-bank-card__bottom"
        >
          <Button
            color=""
            disabled={false}
            isFullWidth={true}
            onClick={[Function]}
            outline="solid"
          >
            解除绑定
          </Button>
        </div>,
        "className": "ljit-bank-card mock-class",
        "isShowingCloseButton": false,
        "left": <div
          className="ljit-bank-card__left"
        >
          <div
            className="ljit-bank-card__title"
          >
            mock-bankName
          </div>
          <LabelText
            fontSize="small"
            isFixedWidth={true}
            isSpaceBetween={false}
            label="持卡人："
            labelColType="medium"
            labelColor="grey"
            text="mock-payer"
            textColor="black"
          />
          <LabelText
            fontSize="small"
            isFixedWidth={true}
            isSpaceBetween={false}
            label="尾号："
            labelColType="medium"
            labelColor="grey"
            text="mock-number"
            textColor="black"
          />
        </div>,
        "onClose": [Function],
        "right": <div
          className="ljit-bank-card__right"
        >
          <LabelText
            fontSize="small"
            isFixedWidth={true}
            isSpaceBetween={false}
            label="绑定时间"
            labelColType="medium"
            labelColor="grey"
            text="2019/08/13 10:38:43"
            textColor="black"
          />
          <LabelText
            fontSize="small"
            isFixedWidth={true}
            isSpaceBetween={false}
            label="可提现时间："
            labelColType="medium"
            labelColor="grey"
            text="2019/08/13 16:38:43"
            textColor="black"
          />
        </div>,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
