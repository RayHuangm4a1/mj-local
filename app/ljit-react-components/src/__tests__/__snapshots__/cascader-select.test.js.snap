// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CascaderSelect should renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CascaderSelect
    className=""
    disabled={false}
    isAllowClear={true}
    isShowAll={false}
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    options={
      Array [
        Object {
          "label": "ALL",
          "value": "ALL",
        },
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "label": "A-A-A",
                  "value": "A-A-A",
                },
              ],
              "label": "A-A",
              "value": "A-A",
            },
          ],
          "label": "A",
          "value": "A",
        },
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "label": "B-A-A",
                  "value": "B-A-A",
                },
              ],
              "label": "B-A",
              "value": "B-A",
            },
          ],
          "label": "B",
          "value": "B",
        },
      ]
    }
    placeholder=""
    popupClassName=""
    style={Object {}}
    value={
      Array [
        "A",
        "A-A",
        "A-A-A",
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "allowClear": true,
      "className": "ljit-cascader-select",
      "disabled": false,
      "displayRender": [Function],
      "expandTrigger": "hover",
      "onBlur": [Function],
      "onChange": [Function],
      "onFocus": [Function],
      "options": Array [
        Object {
          "label": "ALL",
          "value": "ALL",
        },
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "label": "A-A-A",
                  "value": "A-A-A",
                },
              ],
              "label": "A-A",
              "value": "A-A",
            },
          ],
          "label": "A",
          "value": "A",
        },
        Object {
          "children": Array [
            Object {
              "children": Array [
                Object {
                  "label": "B-A-A",
                  "value": "B-A-A",
                },
              ],
              "label": "B-A",
              "value": "B-A",
            },
          ],
          "label": "B",
          "value": "B",
        },
      ],
      "placeholder": "",
      "popupClassName": "ljit-cascader-select__pop-up",
      "popupPlacement": "bottomLeft",
      "style": Object {},
      "transitionName": "slide-up",
      "value": Array [
        "A",
        "A-A",
        "A-A-A",
      ],
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "allowClear": true,
        "className": "ljit-cascader-select",
        "disabled": false,
        "displayRender": [Function],
        "expandTrigger": "hover",
        "onBlur": [Function],
        "onChange": [Function],
        "onFocus": [Function],
        "options": Array [
          Object {
            "label": "ALL",
            "value": "ALL",
          },
          Object {
            "children": Array [
              Object {
                "children": Array [
                  Object {
                    "label": "A-A-A",
                    "value": "A-A-A",
                  },
                ],
                "label": "A-A",
                "value": "A-A",
              },
            ],
            "label": "A",
            "value": "A",
          },
          Object {
            "children": Array [
              Object {
                "children": Array [
                  Object {
                    "label": "B-A-A",
                    "value": "B-A-A",
                  },
                ],
                "label": "B-A",
                "value": "B-A",
              },
            ],
            "label": "B",
            "value": "B",
          },
        ],
        "placeholder": "",
        "popupClassName": "ljit-cascader-select__pop-up",
        "popupPlacement": "bottomLeft",
        "style": Object {},
        "transitionName": "slide-up",
        "value": Array [
          "A",
          "A-A",
          "A-A-A",
        ],
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
